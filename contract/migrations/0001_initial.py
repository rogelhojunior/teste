# Generated by Django 4.1.3 on 2023-04-21 20:03

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnexoContrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_anexo', models.SmallIntegerField(blank=True, choices=[(1, 'CCB'), (2, 'Documento do cliente frente'), (3, 'Documento do cliente verso'), (12, 'Documentos Adicionais'), (4, 'Selfie'), (5, 'Foto da Prova de Vida'), (6, 'Comprovante de endereço'), (7, 'Comprovante financeiro'), (11, 'Repasse'), (22, 'Arquivo retorno reserva'), (8, 'Documento - CNH'), (13, 'Documento Frente - CNH'), (14, 'Documento Verso - CNH')], null=True, verbose_name='Tipo do anexo')),
                ('nome_anexo', models.CharField(max_length=300, verbose_name='Nome do anexo')),
                ('anexo_extensao', models.CharField(max_length=10, verbose_name='Código extensão')),
                ('anexo_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='URL do documento')),
                ('arquivo', models.FileField(blank=True, null=True, upload_to='cliente', verbose_name='Documento')),
                ('anexado_em', models.DateTimeField(auto_now_add=True, verbose_name='Anexado em')),
            ],
            options={
                'verbose_name': 'Contrato - Anexo',
                'verbose_name_plural': 'Contrato - Anexos',
            },
        ),
        migrations.CreateModel(
            name='CartaoBeneficio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enviado_documento_pessoal', models.BooleanField(default=False, verbose_name='Documento pessoal enviado?')),
                ('pendente_documento', models.BooleanField(default=False, verbose_name='Documento pessoal pendente?')),
                ('enviado_comprovante_residencia', models.BooleanField(default=False, verbose_name='Comprovante de residência enviado?')),
                ('pendente_endereco', models.BooleanField(default=False, verbose_name='Comprovante de residência pendente?')),
                ('selfie_enviada', models.BooleanField(default=False, verbose_name='Selfie enviada?')),
                ('selfie_pendente', models.BooleanField(default=False, verbose_name='Selfie pendente?')),
                ('folha', models.CharField(blank=True, max_length=10, null=True, verbose_name='Folha')),
                ('verba', models.CharField(blank=True, max_length=15, null=True, verbose_name='Verba')),
                ('numero_contrato_averbadora', models.IntegerField(blank=True, null=True, verbose_name='Número do contrato - Retorno Averbadora')),
                ('possui_saque', models.BooleanField(default=True, verbose_name='Possui saque?')),
                ('possui_saque_complementar', models.BooleanField(default=False, verbose_name='Possui saque complementar?')),
                ('valor_disponivel_saque', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor disponível para saque')),
                ('valor_saque', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor do saque')),
                ('valor_financiado', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor Financiado')),
                ('codigo_instituicao', models.IntegerField(blank=True, null=True, verbose_name='Código da Instituição')),
                ('carencia', models.IntegerField(blank=True, null=True, verbose_name='Carência')),
                ('reserva', models.CharField(blank=True, max_length=15, null=True, verbose_name='Número da Reserva')),
            ],
            options={
                'verbose_name': 'Cartão Benefício',
                'verbose_name_plural': 'Cartão Benefício',
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_produto', models.SmallIntegerField(choices=[(1, 'FGTS'), (2, 'INSS - Representante Legal'), (3, 'Cartão Benefício - Representante Legal'), (4, 'PAB'), (5, 'INSS CORBAN'), (6, 'INSS'), (7, 'Cartão Benefício')], default=1, verbose_name='Tipo de Produto')),
                ('cd_parceiro', models.CharField(blank=True, default=None, help_text='Código do contrato no parceiro.', max_length=200, null=True, verbose_name='Cód. parceiro')),
                ('status', models.SmallIntegerField(choices=[(1, 'Digitação'), (2, 'Aguardando Formalização'), (3, 'Formalizado'), (4, 'Mesa'), (5, 'Em Averbação'), (6, 'Pago'), (0, 'Cancelado')], db_index=True, default=1)),
                ('token_contrato', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='Token do contrato')),
                ('cd_contrato_tipo', models.SmallIntegerField(choices=[(1, 'Operação nova (margem livre)'), (2, 'Refinanciamento'), (3, 'Refin Portabilidade'), (4, 'Portabilidade'), (5, 'Novo Aumento Salarial')], verbose_name='Tipo do contrato')),
                ('taxa', models.DecimalField(blank=True, decimal_places=7, max_digits=12, null=True, verbose_name='Taxa da operação')),
                ('taxa_efetiva_ano', models.DecimalField(blank=True, decimal_places=7, help_text='Taxa considerada no contrato', max_digits=12, null=True, verbose_name='Taxa efetiva ao ano da operação')),
                ('taxa_efetiva_mes', models.DecimalField(blank=True, decimal_places=7, help_text='Taxa considerada no contrato', max_digits=12, null=True, verbose_name='Taxa efetiva ao mês da operação')),
                ('vr_tac', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor TAC')),
                ('vr_iof', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor do IOF')),
                ('vr_iof_adicional', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='IOF Adicional')),
                ('vr_iof_seguro', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor IOF + seguro')),
                ('vr_iof_total', models.DecimalField(blank=True, decimal_places=7, max_digits=12, null=True, verbose_name='Valor IOF total')),
                ('cet_mes', models.DecimalField(blank=True, decimal_places=7, max_digits=12, null=True, verbose_name='Taxa CET ao mês da operação')),
                ('cet_ano', models.DecimalField(blank=True, decimal_places=7, max_digits=12, null=True, verbose_name='Taxa CET ao ano da operação')),
                ('vr_liberado_cliente', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor liberado Cliente')),
                ('limite_pre_aprovado', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor do limite pré-aprovado')),
                ('vencimento_fatura', models.CharField(blank=True, max_length=2, null=True, verbose_name='Dia do vencimento da fatura')),
                ('seguro', models.BooleanField(default=False, verbose_name='Possui seguro?')),
                ('vr_seguro', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor do seguro')),
                ('taxa_seguro', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Taxa do seguro prestamista')),
                ('contrato_assinado', models.BooleanField(default=False, verbose_name='Contrato assinado?')),
                ('cancelada', models.BooleanField(default=False, verbose_name='Reserva cancelada?')),
                ('url_formalizacao', models.CharField(blank=True, max_length=255, null=True, verbose_name='URL Formalização')),
                ('link_formalizacao_criado_em', models.DateTimeField(blank=True, null=True, verbose_name='Criação do link de formalização')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data última atualização')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': '1. Contratos',
            },
        ),
        migrations.CreateModel(
            name='DadosProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_produto', models.SmallIntegerField(blank=True, choices=[(1, 'FGTS'), (2, 'INSS - Representante Legal'), (3, 'Cartão Benefício - Representante Legal'), (4, 'PAB'), (5, 'INSS CORBAN'), (6, 'INSS'), (7, 'Cartão Benefício')], null=True, verbose_name='Tipo do Produto')),
                ('nome_propriedade', models.SmallIntegerField(blank=True, choices=[(1, 'Senha Portal'), (2, 'Número Matrícula'), (3, 'Folha'), (4, 'Verba'), (5, 'Reserva'), (6, 'Prazo'), (7, 'Margem Atual'), (8, 'Tipo de Pagamento'), (9, 'Id Registro Dock'), (10, 'Id Conta Dock'), (11, 'Id Cartão Dock'), (12, 'Id Endereço Dock'), (13, 'Id Telefone Dock'), (14, 'Status Dock'), (15, 'Cartão Tem-Saude'), (16, 'Token Usuario Tem-Saude'), (17, 'Código Familiar Unico'), (18, 'Questionário de Educação Financeira Preenchido'), (19, 'Documento Pessoal Enviado?'), (20, 'Documento Pessoal Pendente?'), (21, 'Comprovante de Residência Enviado?'), (22, 'Comprovante de Residência Prendente?'), (23, 'Selfie Enviada?'), (24, 'Selfie Pendente?'), (27, 'Número do Contrato - Fácil'), (28, 'Possui Saque?'), (29, 'Possui Saque Complementar?'), (30, 'Valor Disponivel para saque'), (31, 'Valor Saque'), (32, 'Valor Financiado'), (33, 'Limite Pre Aprovado'), (34, 'Código Instituição'), (35, 'Carência'), (37, 'Número do Contrato - Facta'), (38, 'Chave Webhook Financeira'), (40, 'Número CNPJ Correspondente'), (41, 'Número CPF Correspondente'), (42, 'Número CPF Agente Validador'), (43, 'Data Primeiro Vencimento'), (44, 'Url Frame'), (45, 'Data Digitação'), (46, 'Data Contrato'), (47, 'Documentos Validados'), (48, 'Cedido?'), (49, 'Salvo pela ACCESS?'), (50, 'Valor da Cessão'), (51, 'Taxa da Cessão'), (52, 'Contrato cedido FDIC')], null=True, verbose_name='Propriedade')),
                ('valor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Valor')),
            ],
        ),
        migrations.CreateModel(
            name='Taxa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxa', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Taxa')),
                ('ativo', models.BooleanField(default=False, verbose_name='Taxa ativa?')),
            ],
            options={
                'verbose_name': '2. Taxa',
                'verbose_name_plural': '2. Taxas',
            },
        ),
        migrations.CreateModel(
            name='ValidacaoContrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mensagem_observacao', models.CharField(max_length=300, verbose_name='Mensagem de Observação')),
                ('checked', models.BooleanField(default=True, verbose_name='Status')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Inserido em')),
                ('retorno_hub', models.CharField(max_length=10, verbose_name='Código extensão')),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contract.contrato', verbose_name='Contrato')),
            ],
        ),
        migrations.CreateModel(
            name='StatusContrato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=300, verbose_name='Nome do Status')),
                ('descricao_inicial', models.CharField(max_length=10, verbose_name='Descrição Inicial')),
                ('descricao_originacao', models.CharField(max_length=10, verbose_name='Descrição Originação')),
                ('descricao_mesa', models.CharField(max_length=10, verbose_name='Descrição da Mesa')),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contract.contrato', verbose_name='Contrato')),
            ],
        ),
        migrations.CreateModel(
            name='Inss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nu_contrato_facta', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Número contrato na Facta')),
                ('chave_webhook_financeira', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Chave do webhook da financeira')),
                ('nu_cnpj_correspondente', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Número CNPJ do correspondente')),
                ('nu_cpf_agente_validador', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Número CPF do agente validador')),
                ('qt_parcelas_aberto', models.IntegerField(blank=True, null=True, verbose_name='Quantidade de parcelas em aberto')),
                ('qt_parcelas_pagas', models.IntegerField(blank=True, null=True, verbose_name='Quantidade de parcelas pagas')),
                ('qt_parcelas_vencer', models.IntegerField(blank=True, null=True, verbose_name='Quantidade de parcelas a vencer')),
                ('qt_parcelas_averbadas', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantidade de parcelas averbadas')),
                ('qt_parcelas_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantidade de parcelas total')),
                ('vr_parcela', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor da Parcela')),
                ('vr_aberto', models.DecimalField(blank=True, decimal_places=2, help_text='Considerando parcelas em atraso', max_digits=12, null=True, verbose_name='Valor em aberto da operação que está sendo cedida')),
                ('vr_contrato', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor do contrato')),
                ('vr_vencer', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor a vencer')),
                ('vr_liberado_cliente', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor liberado para pagamento ao cliente')),
                ('custo_operacao', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True, verbose_name='Custo da operação')),
                ('nu_contrato_ccb', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Número contrato CCB')),
                ('nu_protocolo_averbacao', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Protocolo de averbação da operação ')),
                ('cd_retorno_averbacao', models.BooleanField(blank=True, null=True, verbose_name='Retorno averbação ')),
                ('dt_retorno_averbacao', models.DateField(blank=True, null=True, verbose_name='Data de retorno da averbação ')),
                ('nu_cessao_retorno_registrador', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Nº da cessão')),
                ('possui_alerta', models.BooleanField(default=False, verbose_name='Possui alerta?')),
                ('recusado', models.BooleanField(default=False, verbose_name='Recusado?')),
                ('documentos_validados', models.BooleanField(default=False, help_text='Indica se o contrato passou por uma análise dos documentos.', verbose_name='Documentos checados?')),
                ('cedido_fundo', models.BooleanField(default=False, help_text='Indica se o contrato foi cedido', verbose_name='Cedido?')),
                ('data_cedido_fundo', models.DateField(blank=True, null=True, verbose_name='Data que foi cedido')),
                ('retorno_access', models.BooleanField(default=False, help_text='Indica se a Access salvou o(s) documento(s) anexados', verbose_name='Salvo pela ACCESS?')),
                ('valor_cessao', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=12, null=True, verbose_name='Valor da Cessão')),
                ('taxa_cessao', models.DecimalField(blank=True, decimal_places=7, default=None, max_digits=12, null=True, verbose_name='Taxa da Cessão')),
                ('contrato_cedido_fdic', models.BooleanField(default=False, verbose_name='Contrato cedido FDIC')),
                ('hash', models.CharField(max_length=255, null=True, verbose_name='Hash do contrato')),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contract.contrato', verbose_name='Contrato')),
            ],
            options={
                'verbose_name': 'INSS',
                'verbose_name_plural': 'INSS',
            },
        ),
        migrations.CreateModel(
            name='EnvelopeContratos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('contrato', models.ManyToManyField(to='contract.contrato', verbose_name='Contrato')),
            ],
            options={
                'verbose_name': 'Envelope',
                'verbose_name_plural': '3. Envelope',
            },
        ),
    ]
