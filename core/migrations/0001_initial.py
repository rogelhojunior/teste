# Generated by Django 4.1.3 on 2023-04-21 20:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contract', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BancosBrasileiros',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=100, null=True, verbose_name='Codigo do banco')),
                ('nome', models.CharField(max_length=100, null=True, verbose_name='Nome do banco')),
                ('ispb', models.CharField(max_length=100, null=True, verbose_name='Código ISPB')),
                ('aceita_liberacao', models.BooleanField(default=False, verbose_name='Aceita liberção?')),
            ],
            options={
                'verbose_name': '2. Banco brasileiro',
                'verbose_name_plural': '2. Bancos brasileiros',
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_cliente', models.SmallIntegerField(choices=[(1, 'Cliente'), (2, 'Representante legal')], default=1, verbose_name='Tipo')),
                ('cd_cliente_parceiro', models.CharField(blank=True, default=None, help_text='Código do cliente no parceiro.', max_length=200, null=True, verbose_name='Cód. parceiro')),
                ('nome_cliente', models.CharField(max_length=200, verbose_name='Nome do cliente')),
                ('nu_cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='Número CPF do cliente')),
                ('dt_nascimento', models.DateField(verbose_name='Data de nascimento')),
                ('sexo', models.CharField(max_length=50, verbose_name='Sexo do cliente')),
                ('estado_civil', models.CharField(max_length=50, verbose_name='Estado civil')),
                ('nome_mae', models.CharField(max_length=200, verbose_name='Nome da mãe do cliente')),
                ('nome_pai', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nome do Pai do cliente')),
                ('documento_tipo', models.SmallIntegerField(blank=True, choices=[(1, 'RG'), (2, 'CNH')], null=True, verbose_name='Tipo de documento')),
                ('documento_numero', models.CharField(blank=True, help_text='Número do documento selecionado acima', max_length=20, null=True, verbose_name='Número do documento do cliente')),
                ('documento_data_emissao', models.DateField(blank=True, null=True, verbose_name='Data de emissão do documento')),
                ('documento_orgao_emissor', models.CharField(blank=True, max_length=10, null=True, verbose_name='Órgão emissor do documento')),
                ('documento_uf', models.SmallIntegerField(blank=True, choices=[(1, 'Acre'), (2, 'Alagoas'), (3, 'Amapá'), (4, 'Amazonas'), (5, 'Bahia'), (6, 'Ceará'), (7, 'Distrito Federal'), (8, 'Espírito Santo'), (9, 'Goiás'), (10, 'Maranhão'), (11, 'Mato Grosso'), (12, 'Mato Grosso do Sul'), (13, 'Minas Gerais'), (14, 'Pará'), (15, 'Paraíba'), (16, 'Paraná'), (17, 'Pernambuco'), (18, 'Piauí'), (19, 'Rio de Janeiro'), (20, 'Rio Grande do Norte'), (21, 'Rio Grande do Sul'), (22, 'Rondônia'), (23, 'Roraima'), (24, 'Santa Catarina'), (25, 'São Paulo'), (26, 'Sergipe'), (27, 'Tocantins')], null=True, verbose_name='UF de emissão do documento')),
                ('naturalidade', models.CharField(max_length=200, verbose_name='Cidade de Naturalidade do cliente')),
                ('nacionalidade', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='País do cliente')),
                ('ramo_atividade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ramo de atividade')),
                ('tipo_profissao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tipo de profissão')),
                ('renda', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Renda')),
                ('vr_patrimonio', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=12, null=True, verbose_name='Valor do Patrimônio')),
                ('possui_procurador', models.BooleanField(default=False)),
                ('ppe', models.BooleanField(default=False, verbose_name='Pessoa Politicamente Exposta')),
                ('tipo_logradouro', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Tipo do Logradouro')),
                ('endereco_residencial_tipo', models.SmallIntegerField(blank=True, choices=[(1, 'Própria'), (2, 'Alugada'), (3, 'Familiares'), (4, 'Empresa')], null=True, verbose_name='Tipo da residência')),
                ('endereco_logradouro', models.CharField(blank=True, max_length=200, null=True, verbose_name='Endereço residencial do cliente')),
                ('endereco_numero', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número da residência do cliente')),
                ('endereco_complemento', models.CharField(blank=True, max_length=200, null=True, verbose_name='Complemento da residência do cliente')),
                ('endereco_bairro', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bairro de residência do cliente')),
                ('endereco_cidade', models.CharField(blank=True, max_length=200, null=True, verbose_name='Cidade de residência do cliente')),
                ('endereco_uf', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF de residência do cliente')),
                ('endereco_cep', models.CharField(max_length=20, verbose_name='CEP da residência do cliente')),
                ('tempo_residencia', models.CharField(blank=True, default=None, max_length=30, null=True, verbose_name='Tempo de residência do cliente')),
                ('email', models.CharField(blank=True, max_length=200, null=True, verbose_name='E-mail do cliente')),
                ('telefone_celular', models.PositiveBigIntegerField(verbose_name='DDD + número com 9 dígitos')),
                ('telefone_residencial', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='DDD + número com 8 dígitos')),
                ('conjuge_nome', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Nome do(a) cônjuge')),
                ('conjuge_cpf', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='CPF do(a) cônjuge')),
                ('conjuge_data_nascimento', models.DateField(blank=True, default=None, null=True, verbose_name='Data de nascimento do(a) cônjuge')),
                ('cd_familiar_unico', models.CharField(blank=True, default=None, help_text='Utilizado no PAB.', max_length=20, null=True, verbose_name='Cód. familiar único')),
                ('form_ed_financeira', models.BooleanField(default=False, help_text='Utilizado no PAB', verbose_name='Questionário de Educação Financeira preenchido')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': '1. Clientes',
            },
        ),
        migrations.CreateModel(
            name='ParametrosBackoffice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=300, null=True, verbose_name='Nome')),
                ('tipoProduto', models.SmallIntegerField(choices=[(1, 'FGTS'), (2, 'INSS - Representante Legal'), (3, 'Cartão Benefício - Representante Legal'), (4, 'PAB'), (5, 'INSS CORBAN'), (6, 'INSS'), (7, 'Cartão Benefício')], default=1, verbose_name='Tipo de Produto')),
                ('quantidade_contratos_por_cliente', models.SmallIntegerField(default=0, verbose_name='Quantidade de contratos por clientes')),
                ('valor_tac', models.DecimalField(blank=True, decimal_places=7, max_digits=12, null=True, verbose_name='Valor Tac')),
                ('limitacao_iof', models.DecimalField(decimal_places=7, max_digits=12, null=True, verbose_name='Limitação de IOF')),
                ('taxa_iof_diario', models.DecimalField(blank=True, decimal_places=7, max_digits=12, null=True, verbose_name='Porcentagem IOF diário')),
                ('taxa_iof_adicional', models.DecimalField(blank=True, decimal_places=7, max_digits=12, null=True, verbose_name='Porcentagem IOF adicional')),
                ('taxa_iof_seguro', models.DecimalField(blank=True, decimal_places=7, max_digits=12, null=True, verbose_name=' Porcentagem  IOF + seguro')),
                ('valor_outros', models.DecimalField(decimal_places=7, default=0, max_digits=12, verbose_name='Outros valores')),
                ('url_formalizacao', models.CharField(default='', max_length=300, null=True, verbose_name='URL para envio de formalização')),
                ('celulares_por_contrato', models.IntegerField(default=2, null=True, verbose_name='Número de telefones iguais permitidos por contrato')),
                ('texto_sms_formalizacao', models.CharField(default='', help_text='Limite de caracteres limitado à 70 para envio do SMS.', max_length=70, null=True, verbose_name='Texto SMS formalização')),
                ('senha_admin', models.CharField(default='', max_length=300, null=True, verbose_name='Senha administrador')),
                ('ativo', models.BooleanField(default=False, verbose_name='Ativo?')),
            ],
            options={
                'verbose_name': '3. Parametro BackOffice',
                'verbose_name_plural': '3. Parametros BackOffice',
            },
        ),
        migrations.CreateModel(
            name='ParametrosProduto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipoProduto', models.SmallIntegerField(choices=[(1, 'FGTS'), (2, 'INSS - Representante Legal'), (3, 'Cartão Benefício - Representante Legal'), (4, 'PAB'), (5, 'INSS CORBAN'), (6, 'INSS'), (7, 'Cartão Benefício')], default=1, verbose_name='Tipo de Produto')),
                ('documento_pessoal', models.BooleanField(default=False, verbose_name='Documento Pessoal')),
                ('comprovante_residencia', models.BooleanField(default=False, verbose_name='Comprovante de Residencia')),
                ('documento_adicional', models.BooleanField(default=False, verbose_name='Documentos Adicionais')),
            ],
            options={
                'verbose_name': '4. Parametro Produto',
                'verbose_name_plural': '4. Parametros Produtos',
            },
        ),
        migrations.CreateModel(
            name='RepresentanteLegal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cliente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente_representantes', to='core.cliente', verbose_name='Cliente')),
                ('representanteLegal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='representante', to='core.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Represenante Legal',
                'verbose_name_plural': 'Representantes Legais',
            },
        ),
        migrations.CreateModel(
            name='Parcela',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nuParcela', models.IntegerField(db_index=True, verbose_name='Número da parcela')),
                ('dtVencimento', models.DateField(db_index=True, verbose_name='Data de vencimento da parcela')),
                ('vrParcela', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor da parcela')),
                ('recebido_facta', models.BooleanField(default=False, verbose_name='Recebido parceiro?')),
                ('paga', models.BooleanField(default=False, verbose_name='Paga?')),
                ('dtPagamento', models.DateTimeField(blank=True, null=True, verbose_name='Data do pagamento da parcela')),
                ('vrPago', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor pago da parcela')),
                ('vrJuros', models.DecimalField(blank=True, decimal_places=2, help_text='Se aplicável', max_digits=12, null=True, verbose_name='Valor de juros da parcela')),
                ('vrMulta', models.DecimalField(blank=True, decimal_places=2, help_text='Se aplicável', max_digits=12, null=True, verbose_name='Valor multa da parcela')),
                ('cdOrigemBaixa', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Código de origem da baixa')),
                ('dtCompra', models.DateField(blank=True, null=True, verbose_name='Data de compra')),
                ('vrParcelaVencimento', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da parcela no vencimento')),
                ('vrCompra', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor da compra')),
                ('vrPrincipalParcela', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Valor principal da parcela')),
                ('saldoDevedorParcela', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Saldo devedor da parcela')),
                ('txNegociacao', models.DecimalField(blank=True, decimal_places=7, max_digits=12, null=True, verbose_name='Taxa da negociação')),
                ('vrCessaoFIDC', models.DecimalField(blank=True, decimal_places=2, default=None, max_digits=12, null=True, verbose_name='Valor da Cessão FIDC')),
                ('dtUltimaAtualizacao', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Atualizado em')),
                ('nuCodParceiro', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cód. registrador')),
                ('contrato', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contract.contrato', verbose_name='Contrato')),
            ],
            options={
                'verbose_name': 'Contrato - Parcela',
                'verbose_name_plural': 'Contrato - Parcelas',
                'ordering': ('nuParcela',),
            },
        ),
        migrations.CreateModel(
            name='DadosBancarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conta_tipo', models.SmallIntegerField(blank=True, choices=[(1, 'Conta Corrente Pessoa Física'), (2, 'Conta Corrente Pessoa Jurídica'), (3, 'Conta Poupança Pessoa Física'), (4, 'Cartão magnético')], null=True, verbose_name='Tipo de conta')),
                ('conta_banco', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número do banco')),
                ('conta_agencia', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número da agência')),
                ('conta_numero', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número da conta')),
                ('conta_digito', models.CharField(blank=True, max_length=20, null=True, verbose_name='Dígito da conta')),
                ('conta_cpf_titular', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF do Titular')),
                ('conta_tipo_pagamento', models.SmallIntegerField(blank=True, choices=[(1, 'TED'), (2, 'PIX')], null=True, verbose_name='Tipo de pagamento')),
                ('cliente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente_dados_bancarios', to='core.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Dado Bancário',
                'verbose_name_plural': 'Dados Bancários',
            },
        ),
        migrations.CreateModel(
            name='DadoCliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_produto', models.SmallIntegerField(blank=True, choices=[(1, 'FGTS'), (2, 'INSS - Representante Legal'), (3, 'Cartão Benefício - Representante Legal'), (4, 'PAB'), (5, 'INSS CORBAN'), (6, 'INSS'), (7, 'Cartão Benefício')], null=True, verbose_name='Tipo do Produto')),
                ('nome_propriedade', models.SmallIntegerField(blank=True, choices=[(1, 'Senha Portal'), (2, 'Número Matrícula'), (3, 'Folha'), (4, 'Verba'), (5, 'Reserva'), (6, 'Prazo'), (7, 'Margem Atual'), (8, 'Tipo de Pagamento'), (9, 'Id Registro Dock'), (10, 'Id Conta Dock'), (11, 'Id Cartão Dock'), (12, 'Id Endereço Dock'), (13, 'Id Telefone Dock'), (14, 'Status Dock'), (15, 'Cartão Tem-Saude'), (16, 'Token Usuario Tem-Saude'), (17, 'Código Familiar Unico'), (18, 'Questionário de Educação Financeira Preenchido'), (19, 'Documento Pessoal Enviado?'), (20, 'Documento Pessoal Pendente?'), (21, 'Comprovante de Residência Enviado?'), (22, 'Comprovante de Residência Prendente?'), (23, 'Selfie Enviada?'), (24, 'Selfie Pendente?'), (27, 'Número do Contrato - Fácil'), (28, 'Possui Saque?'), (29, 'Possui Saque Complementar?'), (30, 'Valor Disponivel para saque'), (31, 'Valor Saque'), (32, 'Valor Financiado'), (33, 'Limite Pre Aprovado'), (34, 'Código Instituição'), (35, 'Carência'), (37, 'Número do Contrato - Facta'), (38, 'Chave Webhook Financeira'), (40, 'Número CNPJ Correspondente'), (41, 'Número CPF Correspondente'), (42, 'Número CPF Agente Validador'), (43, 'Data Primeiro Vencimento'), (44, 'Url Frame'), (45, 'Data Digitação'), (46, 'Data Contrato'), (47, 'Documentos Validados'), (48, 'Cedido?'), (49, 'Salvo pela ACCESS?'), (50, 'Valor da Cessão'), (51, 'Taxa da Cessão'), (52, 'Contrato cedido FDIC')], null=True, verbose_name='Propriedade')),
                ('valor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Valor')),
                ('cliente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente_dados_produto', to='core.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Dados do Produto - Cliente',
                'verbose_name_plural': 'Dados do Produto',
            },
        ),
        migrations.CreateModel(
            name='ClienteInss',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cd_familiar_unico', models.CharField(blank=True, default=None, help_text='Utilizado no PAB.', max_length=20, null=True, verbose_name='Cód. familiar único')),
                ('form_ed_financeira', models.BooleanField(default=False, help_text='Utilizado no PAB', verbose_name='Questionário de Educação Financeira preenchido')),
                ('cliente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente_dados_inss', to='core.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'INSS',
                'verbose_name_plural': 'INSS',
            },
        ),
        migrations.CreateModel(
            name='ClienteCartaoBeneficio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('senha_portal', models.CharField(blank=True, max_length=30, null=True, verbose_name='Senha Portal Servidor')),
                ('numero_matricula', models.CharField(blank=True, max_length=30, null=True, verbose_name='Número Matrícula')),
                ('folha', models.CharField(blank=True, max_length=30, null=True, verbose_name='Número da Folha')),
                ('verba', models.CharField(blank=True, max_length=30, null=True, verbose_name='Número da Verba')),
                ('reserva', models.CharField(blank=True, max_length=30, null=True, verbose_name='Número da Reserva')),
                ('prazo', models.IntegerField(blank=True, null=True, verbose_name='Prazo')),
                ('margem_atual', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Margem atual')),
                ('id_registro_dock', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID do registro na Dock')),
                ('id_conta_dock', models.CharField(blank=True, max_length=20, null=True, verbose_name='ID Conta Dock')),
                ('id_cartao_dock', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID do cartão na Dock')),
                ('id_endereco_dock', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID do endereço na Dock')),
                ('id_telefone_dock', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID do telefone na Dock')),
                ('status_dock', models.CharField(blank=True, max_length=20, null=True, verbose_name='Status da conta')),
                ('cartao_tem_saude', models.CharField(blank=True, max_length=50, null=True, verbose_name='ID do cartão na Tem Saude')),
                ('token_usuario_tem_saude', models.CharField(blank=True, max_length=300, null=True, verbose_name='ID do usuario na Tem Saude')),
                ('cliente', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente_dados_cartao_beneficio', to='core.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Cartão Benefício',
                'verbose_name_plural': 'Cartão Benefício',
            },
        ),
        migrations.AddIndex(
            model_name='parcela',
            index=models.Index(fields=['nuParcela'], name='core_parcel_nuParce_e1ebff_idx'),
        ),
        migrations.AddIndex(
            model_name='parcela',
            index=models.Index(fields=['dtVencimento'], name='core_parcel_dtVenci_ba58bc_idx'),
        ),
    ]
